@{
    ViewData["Title"] = "Import Equipment";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fas fa-file-import me-2"></i>
                        Import Equipment Data
                    </h3>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["ImportErrors"] != null)
                    {
                        <div class="alert alert-warning alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Import Errors:</strong><br />
                            @TempData["ImportErrors"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["DuplicateCount"] != null && (int)TempData["DuplicateCount"] > 0)
                    {
                        <div class="alert alert-info alert-dismissible fade show" role="alert">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Duplicate Records Found:</strong> @TempData["DuplicateCount"] records were flagged for review.
                            <div class="mt-2">
                                <a href="@Url.Action("DownloadDuplicateRecords")" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-download me-1"></i>
                                    Download Duplicate Records Excel
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-info ms-2" onclick="showDuplicateReview()">
                                    <i class="fas fa-eye me-1"></i>
                                    Review Duplicates Below
                                </button>
                            </div>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <div class="card border-primary">
                                <div class="card-header bg-primary text-white">
                                    <h5 class="mb-0">
                                        <i class="fas fa-download me-2"></i>
                                        Download Template
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <p class="text-muted">
                                        Download the Excel template to ensure your data is formatted correctly for import.
                                    </p>
                                    <a href="@Url.Action("DownloadExcelTemplate")" class="btn btn-primary">
                                        <i class="fas fa-download me-2"></i>
                                        Download Excel Template
                                    </a>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="card border-success">
                                <div class="card-header bg-success text-white">
                                    <h5 class="mb-0">
                                        <i class="fas fa-upload me-2"></i>
                                        Import Data
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <form asp-action="ImportExcel" method="post" enctype="multipart/form-data">
                                        <div class="mb-3">
                                            <label for="locationId" class="form-label">Target Location</label>
                                            <select class="form-select" id="locationId" name="locationId" required>
                                                <option value="">Select a location for this import...</option>
                                                @if (ViewBag.Locations != null)
                                                {
                                                    @foreach (var location in (List<AssetManagement.Models.Location>)ViewBag.Locations)
                                                    {
                                                        <option value="@location.Id">@location.Name - @location.Address</option>
                                                    }
                                                }
                                            </select>
                                            <div class="form-text">All equipment in the Excel file will be assigned to this location. Floor plans and desks will be created under this location.</div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="file" class="form-label">Select Excel File</label>
                                            <input type="file" class="form-control" id="file" name="file" accept=".xlsx" required />
                                            <div class="form-text">Only .xlsx files are supported.</div>
                                        </div>
                                        <button type="submit" class="btn btn-success">
                                            <i class="fas fa-upload me-2"></i>
                                            Import Equipment Data
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                    <hr />

                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">
                                        <i class="fas fa-info-circle me-2"></i>
                                        Import Instructions
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h6>Required Fields:</h6>
                                            <ul class="list-unstyled">
                                                <li><i class="fas fa-check text-success me-2"></i>OATH Tag (unique identifier)</li>
                                                <li><i class="fas fa-check text-success me-2"></i>Asset Tag</li>
                                                <li><i class="fas fa-check text-success me-2"></i>Serial Number</li>
                                                <li><i class="fas fa-check text-success me-2"></i>Model</li>
                                                <li><i class="fas fa-check text-success me-2"></i>Manufacturer</li>
                                            </ul>
                                        </div>
                                        <div class="col-md-6">
                                            <h6>Optional Fields:</h6>
                                            <ul class="list-unstyled">
                                                <li><i class="fas fa-info text-info me-2"></i>Category (will be created if not exists)</li>
                                                <li><i class="fas fa-info text-info me-2"></i>Status (will be created if not exists)</li>
                                                <li><i class="fas fa-info text-info me-2"></i>Location, Floor, Desk (hierarchy will be created)</li>
                                                <li><i class="fas fa-info text-info me-2"></i>Assigned To (Entra ID email)</li>
                                                <li><i class="fas fa-info text-info me-2"></i>Purchase dates and costs</li>
                                            </ul>
                                        </div>
                                    </div>

                                    <div class="alert alert-info mt-3">
                                        <h6><i class="fas fa-lightbulb me-2"></i>Tips:</h6>
                                        <ul class="mb-0">
                                            <li>Use the template to ensure correct formatting</li>
                                            <li>OATH Tag must be unique - existing records will be updated</li>
                                            <li>Categories and Statuses will be automatically created if they don't exist</li>
                                            <li>Location hierarchy (Building → Floor → Desk) will be created automatically</li>
                                            <li>Assigned users must exist in Entra ID (use email address)</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Duplicate Review Section -->
    <div id="duplicateReviewSection" class="row mt-4" style="display: none;">
        <div class="col-12">
            <div class="card border-warning">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Review Duplicate Records
                    </h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Instructions:</strong> Double-click on any cell to edit values. Fix the duplicates and download the corrected Excel file for re-import.
                    </div>
                    
                    <div class="table-responsive">
                        <table id="duplicateTable" class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Row #</th>
                                    <th>OATH Tag</th>
                                    <th>Serial Number</th>
                                    <th>Issue</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="duplicateTableBody">
                                <!-- Duplicate records will be loaded here via JavaScript -->
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="mt-3">
                        <button type="button" class="btn btn-success" onclick="downloadCorrectedExcel()">
                            <i class="fas fa-download me-2"></i>
                            Download Corrected Excel File
                        </button>
                        <button type="button" class="btn btn-secondary ms-2" onclick="hideDuplicateReview()">
                            <i class="fas fa-times me-2"></i>
                            Hide Review
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // File input validation
        document.getElementById('file').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                if (!file.name.endsWith('.xlsx')) {
                    alert('Please select an Excel (.xlsx) file.');
                    this.value = '';
                }
            }
        });

        // Duplicate review functionality
        let duplicateRecords = [];

        function showDuplicateReview() {
            // Load duplicate records from server
            fetch('@Url.Action("GetDuplicateRecords")')
                .then(response => response.json())
                .then(data => {
                    duplicateRecords = data;
                    populateDuplicateTable(data);
                    document.getElementById('duplicateReviewSection').style.display = 'block';
                    document.getElementById('duplicateReviewSection').scrollIntoView({ behavior: 'smooth' });
                })
                .catch(error => {
                    console.error('Error loading duplicate records:', error);
                    alert('Error loading duplicate records. Please try again.');
                });
        }

        function hideDuplicateReview() {
            document.getElementById('duplicateReviewSection').style.display = 'none';
        }

        function populateDuplicateTable(records) {
            const tbody = document.getElementById('duplicateTableBody');
            tbody.innerHTML = '';

            records.forEach((record, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${record.rowNumber}</td>
                    <td class="editable" data-field="oathTag" data-index="${index}" ondblclick="editCell(this)">${record.oathTag}</td>
                    <td class="editable" data-field="serialNumber" data-index="${index}" ondblclick="editCell(this)">${record.serialNumber}</td>
                    <td><span class="badge bg-warning text-dark">${record.reason}</span></td>
                    <td>
                        <button class="btn btn-sm btn-outline-danger" onclick="removeRecord(${index})">
                            <i class="fas fa-trash"></i> Remove
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function editCell(cell) {
            const currentValue = cell.textContent;
            const input = document.createElement('input');
            input.type = 'text';
            input.value = currentValue;
            input.className = 'form-control form-control-sm';
            
            input.addEventListener('blur', function() {
                const newValue = input.value;
                const index = parseInt(cell.getAttribute('data-index'));
                const field = cell.getAttribute('data-field');
                
                // Update the record
                duplicateRecords[index][field] = newValue;
                
                // Update the cell
                cell.textContent = newValue;
            });
            
            input.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    input.blur();
                }
            });
            
            cell.innerHTML = '';
            cell.appendChild(input);
            input.focus();
            input.select();
        }

        function removeRecord(index) {
            if (confirm('Are you sure you want to remove this duplicate record?')) {
                duplicateRecords.splice(index, 1);
                populateDuplicateTable(duplicateRecords);
            }
        }

        function downloadCorrectedExcel() {
            if (duplicateRecords.length === 0) {
                alert('No records to download.');
                return;
            }

            // Collect current values from the table (including user edits)
            const correctedRecords = [];
            const tableRows = document.querySelectorAll('#duplicateTableBody tr');
            
            tableRows.forEach((row, index) => {
                if (index < duplicateRecords.length) {
                    const cells = row.querySelectorAll('td');
                    const correctedRecord = {
                        RowNumber: duplicateRecords[index].rowNumber,
                        OathTag: cells[1].textContent.trim(), // Get current OATH Tag value (may be edited)
                        SerialNumber: cells[2].textContent.trim(), // Get current Serial Number value (may be edited)
                        Reason: duplicateRecords[index].reason,
                        OriginalRowData: duplicateRecords[index].originalRowData || {}
                    };
                    correctedRecords.push(correctedRecord);
                }
            });

            console.log('Original duplicateRecords:', duplicateRecords);
            console.log('Sending corrected records:', correctedRecords);
            
            // Debug: Show what we're collecting from each table cell
            tableRows.forEach((row, index) => {
                const cells = row.querySelectorAll('td');
                console.log(`Row ${index}: OATH Tag = "${cells[1].textContent.trim()}", Serial = "${cells[2].textContent.trim()}"`);
            });

            // Send corrected records to server for Excel generation
            fetch('@Url.Action("GenerateCorrectedExcel")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(correctedRecords)
            })
            .then(response => {
                if (response.ok) {
                    return response.blob();
                }
                throw new Error('Failed to generate Excel file');
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'corrected_duplicates.xlsx';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            })
            .catch(error => {
                console.error('Error downloading corrected Excel:', error);
                alert('Error generating corrected Excel file. Please try again.');
            });
        }
    </script>
}
